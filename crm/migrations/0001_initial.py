# Generated by Django 2.2.8 on 2019-12-06 15:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import django_fsm
import wagtail.contrib.table_block.blocks
import wagtail.core.fields
import wagtailmarkdown.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'channels',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'city',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('notes', wagtailmarkdown.fields.MarkdownField(blank=True, default='')),
                ('default_daily_rate', models.DecimalField(blank=True, decimal_places=2, default=100, max_digits=6, null=True)),
                ('payment_address', wagtailmarkdown.fields.MarkdownField(blank=True, null=True)),
                ('vat_id', models.CharField(blank=True, help_text='VAT ID', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'company',
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('earliest_available', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('full_name', models.CharField(help_text='Name to use in the title of the file, default is current user', max_length=200)),
                ('title', models.CharField(help_text='Title to be placed under the name', max_length=200)),
                ('experience_overview', wagtailmarkdown.fields.MarkdownField(help_text='Notice on your experience')),
                ('include_portfolio', models.BooleanField(default=True, help_text="Include portfolio projects' description")),
                ('education_overview', wagtailmarkdown.fields.MarkdownField(help_text='Notice on your education')),
                ('contact_details', wagtailmarkdown.fields.MarkdownField()),
                ('languages_overview', wagtailmarkdown.fields.MarkdownField()),
                ('rate_overview', wagtailmarkdown.fields.MarkdownField(blank=True, null=True)),
                ('working_permit', wagtailmarkdown.fields.MarkdownField()),
            ],
            options={
                'verbose_name': 'CV',
            },
        ),
        migrations.CreateModel(
            name='CVGenerationSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_title', models.CharField(default='Freelance python developer', help_text='Default title to use', max_length=255)),
                ('default_experience_overview', wagtailmarkdown.fields.MarkdownField(default='Python developer experience: 7 years', help_text='Notice on your experience')),
                ('default_education_overview', wagtailmarkdown.fields.MarkdownField(default='Novosibirsk State Technical University', help_text='Notice on your education')),
                ('default_contact_details', wagtailmarkdown.fields.MarkdownField(default='sergey@cheparev.com')),
                ('default_languages_overview', wagtailmarkdown.fields.MarkdownField(default='English: fluent')),
                ('default_rate_overview', wagtailmarkdown.fields.MarkdownField(default='<<change default in settings>>')),
                ('default_working_permit', wagtailmarkdown.fields.MarkdownField(default='PERMANENT RESIDENCE')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('telephone', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name_plural': 'people',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German')], default='en', max_length=4)),
                ('currency', models.CharField(choices=[('€', 'Euro'), ('$', 'USD')], default='€', max_length=4)),
                ('unit', models.CharField(default='hours', help_text='Work unit', max_length=200)),
                ('vat', models.DecimalField(decimal_places=2, default=19, help_text='VAT in %', max_digits=4)),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('payment_period', models.PositiveIntegerField(default=14, help_text='Amount of days for this invoice to be payed')),
                ('payment_address', wagtailmarkdown.fields.MarkdownField(blank=True, help_text='Copied from the company, if empty')),
                ('receiver_vat_id', models.CharField(help_text='VAT ID of the receiver (you)', max_length=100)),
                ('sender_vat_id', models.CharField(blank=True, help_text='VAT ID of the sender (client), copied from the company if empty', max_length=100)),
                ('issued_date', models.DateField()),
                ('delivery_date', models.DateField()),
                ('tax_id', models.CharField(help_text='Your local tax id', max_length=100)),
                ('bank_account', wagtailmarkdown.fields.MarkdownField(help_text='Payment bank account details')),
                ('contact_data', wagtailmarkdown.fields.MarkdownField()),
                ('title', models.CharField(default='Python development', max_length=200)),
                ('positions', wagtail.core.fields.StreamField([('positions', wagtail.contrib.table_block.blocks.TableBlock(table_options={'autoColumnSize': False, 'colHeaders': ['Article', 'Amount units', 'Price per unit'], 'columns': [{'data': 'article'}, {'data': 'amount', 'type': 'numeric'}, {'data': 'price', 'format': '0.00', 'type': 'numeric'}], 'contextMenu': False, 'editor': 'text', 'height': 216, 'language': 'en', 'minSpareRows': 0, 'renderer': 'text', 'rowHeaders': False, 'stretchH': 'all'}))])),
                ('payed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceGenerationSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_title', models.CharField(default='Freelance python developer', help_text='Default title to use', max_length=255)),
                ('default_language', models.CharField(choices=[('en', 'English'), ('de', 'German')], default='en', max_length=4)),
                ('default_unit', models.CharField(default='hour', help_text='Work unit', max_length=200)),
                ('default_vat', models.FloatField(default=19, help_text='VAT in %')),
                ('default_payment_period', models.PositiveIntegerField(default=14, help_text='Amount of days for this invoice to be payed')),
                ('default_receiver_vat_id', models.CharField(help_text='VAT ID of the receiver (you)', max_length=100)),
                ('default_tax_id', models.CharField(help_text='Your local tax id', max_length=100)),
                ('default_bank_account', wagtailmarkdown.fields.MarkdownField(help_text='Payment bank account details')),
                ('default_contact_data', wagtailmarkdown.fields.MarkdownField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('state', django_fsm.FSMField(default='requested', editable=False, max_length=50)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('original_description', wagtail.core.fields.RichTextField()),
                ('original_url', models.URLField(blank=True, null=True)),
                ('notes', wagtailmarkdown.fields.MarkdownField(blank=True, null=True)),
                ('daily_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='crm.Company')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='crm.City')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='crm.Employee')),
            ],
            options={
                'verbose_name_plural': 'projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Sending time')),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('text', models.TextField()),
                ('gmail_message_id', models.CharField(max_length=50)),
                ('gmail_thread_id', models.CharField(max_length=50)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='crm.Employee')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='crm.Project')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
